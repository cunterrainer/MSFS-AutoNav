// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "MainWindow.h"

AppNavUI::AppNavUI() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(600, 480, "Auto Nav");
    w = o; (void)w;
    o->user_data((void*)(this));
    { Fl_Output* o = new Fl_Output(10, 10, 122, 22, "AirplaneTitle");
      o->box(FL_FLAT_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NO_LABEL);
    } // Fl_Output* o
    { new Fl_Button(10, 40, 122, 22, "Connect");
    } // Fl_Button* o
    { new Fl_Button(10, 70, 122, 22, "Autopilot");
    } // Fl_Button* o
    { Fl_Counter* o = new Fl_Counter(10, 100, 122, 22, "Airspeed");
      o->minimum(0);
      o->maximum(100000);
      o->step(1);
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Counter* o
    { new Fl_Button(10, 130, 122, 22, "Airspeed hold");
    } // Fl_Button* o
    { new Fl_Button(10, 160, 122, 22, "Altitude locked");
    } // Fl_Button* o
    { Fl_Counter* o = new Fl_Counter(10, 190, 122, 22, "Altitude");
      o->minimum(0);
      o->step(100);
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Counter* o
    { new Fl_Button(375, 20, 122, 22, "Test position");
    } // Fl_Button* o
    { new Fl_Button(375, 50, 122, 22, "Refresh @refresh");
    } // Fl_Button* o
    { Fl_Output* o = new Fl_Output(10, 220, 122, 22, "Altitude manually adjustable");
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Output* o
    { Fl_Output* o = new Fl_Output(10, 250, 122, 22, "Approach captured");
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Output* o
    { new Fl_Button(10, 280, 122, 22, "Flight Director");
    } // Fl_Button* o
    { new Fl_Button(10, 310, 122, 22, "Heading locked");
    } // Fl_Button* o
    { Fl_Counter* o = new Fl_Counter(10, 340, 122, 22, "Heading");
      o->minimum(0);
      o->maximum(361);
      o->step(1);
      o->value(360);
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Counter* o
    { Fl_Output* o = new Fl_Output(10, 370, 122, 22, "Heading adjustable");
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Output* o
    { new Fl_Button(10, 400, 122, 22, "Vertical speed hold");
    } // Fl_Button* o
    { Fl_Counter* o = new Fl_Counter(10, 430, 122, 22, "Vertical speed");
      o->minimum(-15000);
      o->maximum(15000);
      o->step(100);
      o->align(Fl_Align(FL_ALIGN_RIGHT));
    } // Fl_Counter* o
    o->resizable(o);
    o->end();
  } // Fl_Double_Window* o
}
